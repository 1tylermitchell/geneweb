<!DOCTYPE html>
<title>
gwsetup macros
</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<body>
<!-- 
insert at the bottom of setup/welcome.thm
-->

<h2>Macros gwsetup</h2>
<p>
The following table lists the macros available in gwsetup. <br>
The second colums provides the result of executing the marco in the current context.

<table border="1" width="100%%">
<tr><td>  Macro </td><td>Result</td><td width="40%%">Explanation</td></tr>

<tr><td>  &#37;a </td><td> %a </td><td> print evar.anon </td></tr>
<tr><td>  &#37;b{&lt;li&gt;base %a&lt;/li&gt;|no base} </td><td> %b{<li>base %a</li>|no base} </td><td> list all bases. Names appear as &#37;a </td></tr>
<tr><td>  &#37;c </td><td> %c </td><td> print setup dir </td></tr>
<tr><td>  &#37;d </td><td> %d </td><td> print conf.comm </td></tr>
<tr><td>  &#37;e </td><td> %e </td><td> print env variables </td></tr>
<tr><td>  &#37;ffile.ext; </td><td> %fsetup.css;
  </td><td> Read file file.ext (setup.css) </td></tr>
<tr><td>  &#37;g{..} </td><td> %g{test} </td><td> print comm.log or content of {..} if does not exist </td></tr>
<tr><td>  &#37;h </td><td> %h </td><td> print env variables </td></tr>
<tr><td>  &#37;i </td><td> %i </td><td> print evar.i </td></tr>
<tr><td>  &#37;j </td><td> %j </td><td> print file selector </td></tr>
<tr><td>  &#37;k{&lt;li&gt;%a&lt;/li&gt;|no var} </td><td> %k{<li>%a</li>|no var} </td><td> print env variables (appear as &#37;a) </td></tr>
<tr><td>  &#37;l </td><td> %l </td><td> print evar.lang </td></tr>
<tr><td>  &#37;m </td><td> %m </td><td> print server name </td></tr>
<tr><td>  &#37;n </td><td> %n </td><td> print referer url</td></tr>
<tr><td>  &#37;o </td><td> %o </td><td> print evar.o </td></tr>
<tr><td>  &#37;p </td><td> %p </td><td> print url variables as -var value (conf.env) </td></tr>
<tr><td>  &#37;q </td><td> %q </td><td> print Version.txt </td></tr>
<tr><td>  &#37;r{..} </td><td> %r{..} </td><td> print gwd.arg or content of {..} if does not exist </td></tr>
<tr><td>  &#37;s{ &#37;a |} </td><td> %s{ %a |xxx} </td><td> for each env variable (&#37;a) whose value is on_ print the content of {...| </td></tr>
<tr><td>  &#37;t{...} </td><td> %t{.exe} </td><td> print content of {} if not Unix (i.e. {.exe})</td></tr>
<tr><td>  &#37;u </td><td> %u </td><td> print setup dir </td></tr>
<tr><td>  &#37;v </td><td> %v{Test exists (env.var o)} </td><td> print content of {...} if env.var o points to an existing base (Test.gwb) </td></tr>
<tr><td>  &#37;w </td><td> %w </td><td> print base dir </td></tr>
<tr><td>  &#37;x </td><td> %x </td><td> print bin dir </td></tr>
<tr><td>  &#37;y </td><td> y </td><td> print only_file name (FAILS!!)</td></tr>
<tr><td>  &#37;z </td><td> %z </td><td> print the value of gwsetup port</td></tr>

<tr><td></td><td></td><td></td></tr>
<tr><td>  &#37;Cvar=value; </td><td> %Ctest=essai; </td><td> If evar.var=value then print "checked" (try test=essai)(except lang) </td></tr>
<tr><td>  &#37;Evar=value; </td><td> %Etest=essai; </td><td> If evar.var=value then print "selected" (try test=essai)(except lang) </td></tr>
<tr><td>  &#37;Lxx </td><td> %Lfr; </td><td> print the full translated value of language xx </td></tr>
<tr><td>  &#37;Vvar; </td><td> %Vtest; </td><td> If evar.var exists (try test), print its value (except lang) </td></tr>
<tr><td>  &#37;Fvar; </td><td> %Ftest; </td><td> Idem V (no difference??) </td></tr>
<tr><td>  &#37;G{..} </td><td> G{test} </td><td> print gwsetup.log or content of {..} if does not exist </td></tr>
<tr><td>  &#37;H </td><td> H </td><td>  print content of file designated by -o (prepend bname.gwb) </td></tr>
<tr><td>  &#37;K </td><td> K </td><td>  print content of file designated by -o or -o1 (prepend bname.gwb) </td></tr>
<tr><td>  &#37;O </td><td> %O </td><td> print evar.o without extension </td></tr>
<tr><td>  &#37;P </td><td> %P </td><td> print the value of gwd_port </td></tr>
<tr><td>  &#37;Q </td><td> %Q </td><td> print parameters1 </td></tr>
<tr><td>  &#37;R </td><td> %R </td><td> print parameters2 </td></tr>
<tr><td>  &#37;T </td><td> T </td><td>  </td></tr>
<tr><td>  &#37;U </td><td> U </td><td>  </td></tr>

<tr><td>  &#37;Ivar;value;{true part|false part} </td>
  <td> %Itest;essai;{test=essai|test!=essai} </td><td> if var=value print true part otherwise false part (not fully tested) </td></tr>

</table>








